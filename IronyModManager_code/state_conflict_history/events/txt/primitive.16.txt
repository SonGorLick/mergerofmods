namespace = primitive
country_event = {
    id = primitive.16
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        log = "primitive.16: [THIS.GetName] is becoming spacefaring"
        capital_scope = {
            fire_on_action = {
                on_action = on_primitive_planet_transferring
                scopes = {
                    from = prev
                }
            }
        }
        remove_country_flag = early_space_age
        set_country_flag = primitives_can_into_space
        set_country_type = default
        IF = {
            limit = {
                species_portrait = "human"
                capital_scope.solar_system = {
                    has_star_flag = primitive_sol
                }
                OR = {
                    is_egalitarian = yes
                    is_xenophile = yes
                }
                OR = {
                    has_authority = auth_democratic
                    has_authority = auth_oligarchic
                }
            }
            change_country_flag = {
                icon = {
                    category = "human"
                    file = "flag_human_9.dds"
                }
                background = {
                    category = "backgrounds"
                    file = "circle.dds"
                }
                colors = {
                    "dark_blue"
                    "green"
                    "null"
                    "null"
                }
            }
            set_name = "humans1"
            set_country_flag = human_1
        }
        else = {
            change_country_flag = random
        }
        switch = {
            trigger = is_species_class
            MAM = {
                set_graphical_culture = mammalian_01
                set_city_graphical_culture = mammalian_01
            }
            REP = {
                set_graphical_culture = reptilian_01
                set_city_graphical_culture = reptilian_01
            }
            AVI = {
                set_graphical_culture = avian_01
                set_city_graphical_culture = avian_01
            }
            ART = {
                set_graphical_culture = arthropoid_01
                set_city_graphical_culture = arthropoid_01
            }
            MOL = {
                set_graphical_culture = molluscoid_01
                set_city_graphical_culture = molluscoid_01
            }
            FUN = {
                set_graphical_culture = fungoid_01
                set_city_graphical_culture = fungoid_01
            }
            PLANT = {
                set_graphical_culture = plantoid_01
                set_city_graphical_culture = plantoid_01
            }
            HUM = {
                set_graphical_culture = humanoid_01
                set_city_graphical_culture = humanoid_01
            }
            LITHOID = {
                set_graphical_culture = lithoid_01
                set_city_graphical_culture = lithoid_01
            }
            NECROID = {
                set_graphical_culture = necroid_01
                set_city_graphical_culture = necroid_01
            }
            AQUATIC = {
                set_graphical_culture = aquatic_01
                set_city_graphical_culture = aquatic_01
            }
            default = {
                set_graphical_culture = mammalian_01
                set_city_graphical_culture = mammalian_01
            }
        }
        if = {
            limit = {
                ruler = {
                    has_trait = leader_trait_ruler_chosen
                }
            }
            change_government = {
                civics = random
            }
        }
        else = {
            change_government = {
                authority = random
                civics = random
            }
        }
        set_name = random
        add_resource = {
            alloys = 1000
            energy = 3000
            influence = 500
            minerals = 3000
        }
        if = {
            limit = {
                country_uses_food = yes
            }
            add_resource = {
                food = 1000
            }
        }
        else = {
            add_resource = {
                minerals = 1000
            }
        }
        if = {
            limit = {
                country_uses_consumer_goods = yes
            }
            add_resource = {
                consumer_goods = 1000
            }
        }
        else = {
            add_resource = {
                energy = 1000
            }
        }
        if = {
            limit = {
                capital_scope = {
                    is_planet_class = pc_ringworld_habitable
                }
            }
            add_resource = {
                energy = 1000
                minerals = 1000
                volatile_motes = 500
                exotic_gases = 500
                rare_crystals = 500
            }
        }
        create_leader = {
            class = scientist
            sub_type = engineering
            name = random
            species = owner_main_species
        }
        create_leader = {
            class = scientist
            sub_type = physics
            name = random
            species = owner_main_species
        }
        create_leader = {
            class = scientist
            sub_type = society
            name = random
            species = owner_main_species
        }
        if = {
            limit = {
                capital_scope = {
                    is_planet_class = pc_hive
                }
            }
            add_modifier = {
                modifier = foreign_biosphere_acclimatization
                days = 9125
            }
        }
        capital_scope = {
            if = {
                limit = {
                    exists = observation_outpost
                }
                observation_outpost.owner = {
                    country_event = {
                        id = primitive.17
                    }
                    save_event_target_as = observation_outpost_owner
                }
                observation_outpost = {
                    dismantle = yes
                }
            }
            clear_blockers = yes
            create_primitive_blockers = yes
            while = {
                limit = {
                    num_pops < 8
                }
                create_pop = {
                    species = owner
                }
            }
            remove_building = building_primitive_farm
            remove_building = building_primitive_mine
            remove_building = building_primitive_factory
            remove_building = building_primitive_capital
            remove_building = building_urban_dwellings
            remove_building = building_urban_dwellings
            remove_building = building_primitive_dwellings
            remove_building = building_stone_palace
            remove_building = building_crude_huts
            remove_building = building_primitive_colony_capital
            remove_building = building_primitive_colony_shelter
            remove_building = building_vbp_wasteland_towns
            remove_building = building_vbp_raiding_villages
            remove_building = building_vbp_government_bunkers
            remove_building = building_vbp_vaults
            remove_all_primitive_buildings = yes
            if = {
                limit = {
                    is_planet_class = pc_ringworld_habitable
                }
                change_pc = pc_shattered_ring_habitable
            }
            generate_space_age_buildings_and_districts = yes
            IF = {
                limit = {
                    any_owned_species = {
                        is_species_class = ROBOT
                    }
                }
                add_building = building_robot_assembly_plant
                add_district = {
                    district_type = district_generator
                }
            }
            IF = {
                limit = {
                    owner = {
                        has_origin = origin_necrophage
                        is_homicidal = no
                    }
                }
                IF = {
                    limit = {
                        owner = {
                            has_valid_civic = civic_agrarian_idyll
                        }
                    }
                    add_district = {
                        district_type = district_city
                    }
                }
                add_building = building_necrophage_elevation_chamber
            }
            remove_all_armies = yes
            fire_on_action = {
                on_action = on_primitive_planet_transferred
                scopes = {
                    from = prev
                }
            }
            solar_system = {
                if = {
                    limit = {
                        NOT = {
                            exists = starbase
                        }
                    }
                    create_starbase = {
                        size = starbase_outpost
                        owner = root
                    }
                }
                else_if = {
                    limit = {
                        starbase = {
                            NOT = {
                                owner = {
                                    is_country = root
                                }
                            }
                        }
                    }
                    starbase = {
                        owner = {
                            country_event = {
                                id = primitive.180
                            }
                        }
                    }
                }
            }
        }
        IF = {
            limit = {
                has_country_flag = mpo_primitive_contact_sender
            }
            remove_country_flag = mpo_primitive_contact_sender
            random_list = {
                50 = {
                    every_country = {
                        limit = {
                            has_country_flag = mpo_primitive_contact@prev
                        }
                        remove_country_flag = mpo_primitive_contact@prev
                        add_opinion_modifier = {
                            who = prev
                            modifier = opinion_common_ground
                        }
                        IF = {
                            limit = {
                                OR = {
                                    is_country_type = primitive
                                    is_country_type = vbp_hive
                                    is_country_type = vbp_machine
                                }
                            }
                            set_timed_country_flag = {
                                flag = mpo_common_ground_advance
                                days = 2
                            }
                            country_event = {
                                id = prim_orig.5
                            }
                        }
                        ELSE = {
                            join_alliance = {
                                who = root
                                override_requirements = yes
                            }
                            IF = {
                                limit = {
                                    NOT = {
                                        has_country_flag = mpo_common_ground_advance
                                    }
                                }
                                set_federation_leader = this
                                add_tradition = tr_diplomacy_adopt
                                add_tradition = tr_diplomacy_the_federation
                            }
                        }
                    }
                    modifier = {
                        factor = 0
                        has_country_flag = mpo_hegemon_advance
                    }
                }
                50 = {
                    IF = {
                        limit = {
                            has_origin = origin_common_ground
                        }
                        set_origin = origin_hegemon
                    }
                    every_country = {
                        limit = {
                            has_country_flag = mpo_primitive_contact@prev
                        }
                        remove_country_flag = mpo_primitive_contact@prev
                        IF = {
                            limit = {
                                OR = {
                                    is_country_type = primitive
                                    is_country_type = vbp_hive
                                    is_country_type = vbp_machine
                                }
                            }
                            set_timed_country_flag = {
                                flag = mpo_hegemon_advance
                                days = 2
                            }
                            country_event = {
                                id = prim_orig.5
                            }
                        }
                        ELSE = {
                            join_alliance = {
                                who = root
                                override_requirements = yes
                            }
                            IF = {
                                limit = {
                                    NOT = {
                                        has_country_flag = mpo_hegemon_advance
                                    }
                                }
                                set_federation_leader = this
                                add_tradition = tr_diplomacy_adopt
                                add_tradition = tr_diplomacy_the_federation
                                federation = {
                                    set_federation_type = hegemony_federation
                                    set_name = random
                                    set_federation_law = succession_term_years_20
                                }
                            }
                        }
                    }
                    modifier = {
                        factor = 0
                        OR = {
                            has_country_flag = mpo_common_ground_advance
                            AND = {
                                is_egalitarian = yes
                                NOT = {
                                    has_country_flag = mpo_hegemon_advance
                                }
                            }
                        }
                    }
                }
            }
        }
        random_owned_ship = {
            limit = {
                is_ship_size = primitive_space_station
            }
            fleet = {
                destroy_fleet = this
            }
        }
        create_fleet = {
            effect = {
                set_owner = PREV
                create_ship = {
                    name = random
                    random_existing_design = science
                }
                set_fleet_stance = evasive
                set_location = PREV.capital_scope.star
                owner = {
                    create_leader = {
                        class = scientist
                        sub_type = survey
                        name = random
                        species = owner_main_species
                    }
                }
                set_leader = last_created_leader
            }
        }
        create_fleet = {
            effect = {
                set_owner = PREV
                create_ship = {
                    name = random
                    random_existing_design = constructor
                }
                set_fleet_stance = evasive
                set_location = PREV.capital_star
            }
        }
        IF = {
            limit = {
                exists = event_target:observation_outpost_owner
            }
            fire_on_action = {
                on_action = on_primitives_enter_space
                scopes = {
                    from = event_target:observation_outpost_owner
                }
            }
        }
        ELSE = {
            set_country_flag = entered_space_unobserved
            fire_on_action = {
                on_action = on_primitives_enter_space
            }
        }
    }
}